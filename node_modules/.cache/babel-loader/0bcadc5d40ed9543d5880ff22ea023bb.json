{"ast":null,"code":"var _jsxFileName = \"/Users/pietro.piraino/Desktop/01-starting-setup/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport './App.css';\nimport Button from \"./components/UI/Button/Button\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showParagraph, setShowParagraph] = useState(false);\n  const [allowToggle, setAllowToggle] = useState(false);\n  const toggleParagraphHandler = useCallback(() => {\n    if (allowToggle) {\n      setShowParagraph(prevValue => !prevValue);\n    }\n  }, [allowToggle]);\n\n  const allowToggleHandler = () => {\n    setAllowToggle(prevValue => !prevValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hi, experiment useMemo and useCallback with me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DemoOutput, {\n      show: showParagraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleParagraphHandler,\n      children: \"Show paragraph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: allowToggleHandler,\n      children: \"Allow toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"9l117POqBkkgHsyGOUAkO3R6HtY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","Button","DemoOutput","App","showParagraph","setShowParagraph","allowToggle","setAllowToggle","toggleParagraphHandler","prevValue","allowToggleHandler"],"sources":["/Users/pietro.piraino/Desktop/01-starting-setup/src/App.js"],"sourcesContent":["import React, {useCallback, useState} from 'react';\n\nimport './App.css';\nimport Button from \"./components/UI/Button/Button\";\nimport DemoOutput from \"./components/Demo/DemoOutput\";\n\nfunction App() {\n    const [showParagraph, setShowParagraph] = useState(false)\n    const [allowToggle, setAllowToggle] = useState(false)\n\n    const toggleParagraphHandler = useCallback(() => {\n        if (allowToggle) {\n            setShowParagraph(prevValue => !prevValue)\n        }\n    }, [allowToggle])\n\n    const allowToggleHandler = () => {\n        setAllowToggle(prevValue => !prevValue)\n    }\n\n    return (\n        <div className=\"app\">\n            <h1>Hi, experiment useMemo and useCallback with me!</h1>\n            <DemoOutput show={showParagraph}/>\n            <Button onClick={toggleParagraphHandler}>Show paragraph</Button>\n            <Button onClick={allowToggleHandler}>Allow toggle</Button>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAC,KAAD,CAAlD;EACA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;EAEA,MAAMQ,sBAAsB,GAAGT,WAAW,CAAC,MAAM;IAC7C,IAAIO,WAAJ,EAAiB;MACbD,gBAAgB,CAACI,SAAS,IAAI,CAACA,SAAf,CAAhB;IACH;EACJ,CAJyC,EAIvC,CAACH,WAAD,CAJuC,CAA1C;;EAMA,MAAMI,kBAAkB,GAAG,MAAM;IAC7BH,cAAc,CAACE,SAAS,IAAI,CAACA,SAAf,CAAd;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,UAAD;MAAY,IAAI,EAAEL;IAAlB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,MAAD;MAAQ,OAAO,EAAEI,sBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII,QAAC,MAAD;MAAQ,OAAO,EAAEE,kBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;GAtBQP,G;;KAAAA,G;AAwBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}